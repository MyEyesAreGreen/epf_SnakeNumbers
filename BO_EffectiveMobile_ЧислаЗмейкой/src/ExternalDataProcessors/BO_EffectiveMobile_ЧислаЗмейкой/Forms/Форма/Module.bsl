#Область ОбработчикиСобытийФормы 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ДлинаСтороныМатрицы = 1
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();
КонецПроцедуры    

&НаСервере
Процедура СформироватьНаСервере()
	   
	ТЗ = ЗаполнитьМатрицу(СформироватьМатрицу(ДлинаСтороныМатрицы));
	СоздатьТаблицуФормы("Результат", "Результат", ТЗ)
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СформироватьМатрицу(ДлинаСтороныМатрицы)
	
	ТЗ = Новый ТаблицаЗначений;
	КвалификаторЧисло = Новый КвалификаторыЧисла(3, 0, ДопустимыйЗнак.Неотрицательный);
	
	Для Счетчик = 0 По ДлинаСтороныМатрицы-1 Цикл
		ТЗ.Колонки.Добавить("к" + Счетчик, Новый ОписаниеТипов("Число", , КвалификаторЧисло));
		ТЗ.Добавить();
	КонецЦикла;	
	Возврат ТЗ; 
	
КонецФункции   

&НаСервереБезКонтекста
Функция ЗаполнитьМатрицу(ТЗ)
	
	N = ТЗ.Количество();
	Счетчик = N*N;
	i = 0;
	j = 0;  
	
	Пока Счетчик >= 1 Цикл
		ТЗ[i]["к"+j] = Счетчик;
		Если (i <= j + 1) И (i + j < N - 1) Тогда
			j = j + 1;	
		Иначе Если (i < j) И (i + j >= N - 1) Тогда
				i = i + 1;				
			Иначе Если (i >= j) И (i + j > N - 1) Тогда
					j = j - 1;			
				Иначе
					i = i - 1;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли; 
		Счетчик = Счетчик - 1;
	КонецЦикла;
	
	Возврат ТЗ;
	
КонецФункции

&НаСервере
Процедура СоздатьТаблицуФормы(Знач ИмяПоляТаблицыФормы, Знач ИмяРеквизитаДанныеФормыКоллекция, Знач ТаблицаЗначений)
    
    // Если руками не создали эелемент формы Таблица, то создается программно
    Если Элементы.Найти(ИмяПоляТаблицыФормы) = Неопределено Тогда
        ЭлементРеквизита = Элементы.Добавить(ИмяПоляТаблицыФормы, Тип("ТаблицаФормы"),);
        ЭлементРеквизита.ПутьКДанным = ИмяРеквизитаДанныеФормыКоллекция;  
		ЭлементРеквизита.ТолькоПросмотр = Истина; 
		ЭлементРеквизита.КоманднаяПанель.Видимость = Ложь;
    КонецЕсли;
    
    УдаляемыеРеквизиты = Новый Массив;
    РеквизитыДляУдаления = ПолучитьРеквизиты(ИмяРеквизитаДанныеФормыКоллекция);
    Для Каждого РеквизитУдаления Из РеквизитыДляУдаления Цикл
        УдаляемыеРеквизиты.Добавить(ИмяРеквизитаДанныеФормыКоллекция+"."+РеквизитУдаления.Имя);
        // Удаляем элементы формы
        Элементы.Удалить(Элементы[ИмяПоляТаблицыФормы+РеквизитУдаления.Имя]);
    КонецЦикла;
    
    // Добавление реквизитов в таблицу формы
    ДобавляемыеРеквизиты = Новый Массив;
    Для каждого Колонка Из ТаблицаЗначений.Колонки Цикл
        ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, ИмяРеквизитаДанныеФормыКоллекция, Колонка.Заголовок));
    КонецЦикла;
    ИзменитьРеквизиты(ДобавляемыеРеквизиты,УдаляемыеРеквизиты);
 
    // Добавление элементов форму
    Для каждого Колонка Из ТаблицаЗначений.Колонки Цикл
        ЭлементРеквизита = Элементы.Добавить(ИмяПоляТаблицыФормы + Колонка.Имя, Тип("ПолеФормы"), Элементы[ИмяПоляТаблицыФормы]);
        ЭлементРеквизита.ПутьКДанным = ИмяРеквизитаДанныеФормыКоллекция + "." + Колонка.Имя;
        ЭлементРеквизита.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементРеквизита.ОтображатьВШапке = Ложь;   
    КонецЦикла;
    
    ЗначениеВРеквизитФормы(ТаблицаЗначений, ИмяРеквизитаДанныеФормыКоллекция); 
	
КонецПроцедуры

#КонецОбласти